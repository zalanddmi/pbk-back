// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PbkService.Data;

#nullable disable

namespace PbkService.Migrations
{
    [DbContext(typeof(PbkContext))]
    [Migration("20240402163136_User_IsUniqueEmailPhonenumber")]
    partial class User_IsUniqueEmailPhonenumber
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PbkService.Models.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("PbkService.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BankId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("TypeCardId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("TypeCardId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("PbkService.Models.Cashback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CardId")
                        .HasColumnType("integer");

                    b.Property<int>("PbkCategoryId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Percent")
                        .HasPrecision(4, 2)
                        .HasColumnType("numeric(4,2)");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("PbkCategoryId");

                    b.ToTable("Cashbacks");
                });

            modelBuilder.Entity("PbkService.Models.Mcc", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Code");

                    b.ToTable("MCCs");
                });

            modelBuilder.Entity("PbkService.Models.MccPbkCategory", b =>
                {
                    b.Property<string>("MccCode")
                        .HasColumnType("character varying(4)");

                    b.Property<int>("PbkCategoryId")
                        .HasColumnType("integer");

                    b.HasKey("MccCode", "PbkCategoryId");

                    b.HasIndex("PbkCategoryId");

                    b.ToTable("MccPbkCategories");
                });

            modelBuilder.Entity("PbkService.Models.Outlet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("MccCode")
                        .IsRequired()
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("ShopId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MccCode");

                    b.HasIndex("ShopId");

                    b.ToTable("Outlets");
                });

            modelBuilder.Entity("PbkService.Models.PbkCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("PbkCategories");
                });

            modelBuilder.Entity("PbkService.Models.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("PbkService.Models.TypeCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("TypeCards");
                });

            modelBuilder.Entity("PbkService.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PbkService.Models.Card", b =>
                {
                    b.HasOne("PbkService.Models.Bank", "Bank")
                        .WithMany("Cards")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PbkService.Models.TypeCard", "TypeCard")
                        .WithMany()
                        .HasForeignKey("TypeCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("TypeCard");
                });

            modelBuilder.Entity("PbkService.Models.Cashback", b =>
                {
                    b.HasOne("PbkService.Models.Card", "Card")
                        .WithMany("Cashbacks")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PbkService.Models.PbkCategory", "PbkCategory")
                        .WithMany()
                        .HasForeignKey("PbkCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("PbkCategory");
                });

            modelBuilder.Entity("PbkService.Models.MccPbkCategory", b =>
                {
                    b.HasOne("PbkService.Models.Mcc", "Mcc")
                        .WithMany("MccPbkCategories")
                        .HasForeignKey("MccCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PbkService.Models.PbkCategory", "PbkCategory")
                        .WithMany("MccPbkCategories")
                        .HasForeignKey("PbkCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mcc");

                    b.Navigation("PbkCategory");
                });

            modelBuilder.Entity("PbkService.Models.Outlet", b =>
                {
                    b.HasOne("PbkService.Models.Mcc", "Mcc")
                        .WithMany()
                        .HasForeignKey("MccCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PbkService.Models.Shop", "Shop")
                        .WithMany("Outlet")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mcc");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("PbkService.Models.Bank", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("PbkService.Models.Card", b =>
                {
                    b.Navigation("Cashbacks");
                });

            modelBuilder.Entity("PbkService.Models.Mcc", b =>
                {
                    b.Navigation("MccPbkCategories");
                });

            modelBuilder.Entity("PbkService.Models.PbkCategory", b =>
                {
                    b.Navigation("MccPbkCategories");
                });

            modelBuilder.Entity("PbkService.Models.Shop", b =>
                {
                    b.Navigation("Outlet");
                });
#pragma warning restore 612, 618
        }
    }
}
